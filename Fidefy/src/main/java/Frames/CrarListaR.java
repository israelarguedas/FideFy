/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frames;

import Clases.ConexionBD;
import Clases.ListaReproduccion;
import Clases.Usuario;
import Clases.UsuarioInicioSesion;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author josue
 */
public class CrarListaR extends javax.swing.JFrame {
    Usuario vUsuario = new Usuario();
    ListaReproduccion vListaRepreduccion = new ListaReproduccion();
    private javax.swing.JFileChooser fileChooser;
    File[] files;
    private List<String> songList = new ArrayList<>();
    private UsuarioInicioSesion datosLogin;
    private String usuarioActual;
    private int idUsuarioActual;
    
    /**
     * Creates new form CrarListaR
     */
    public CrarListaR() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        LstCanciones = new javax.swing.JList<>();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnAgregarCancion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(2, 51, 19));

        jPanel1.setBackground(new java.awt.Color(2, 51, 19));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nombre de la Lista ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 180, -1));

        jCheckBox1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setText("Visible");
        jPanel1.add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        jScrollPane1.setBackground(new java.awt.Color(2, 51, 19));

        LstCanciones.setBackground(new java.awt.Color(2, 51, 19));
        LstCanciones.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        LstCanciones.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(LstCanciones);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 320, -1));

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 300, -1, -1));

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 300, -1, -1));

        btnAgregarCancion.setText("Agregar canciones");
        btnAgregarCancion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarCancionActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregarCancion, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, -1, -1));

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        ConexionBD vConectar = new ConexionBD();
        Connection conexion = null;  

try {
    conexion = vConectar.establecerConexion();
    conexion.setAutoCommit(false);            
    String playName = jTextField1.getText();
    String comandoInsertado = "INSERT INTO playlist(nombrelista,idusuario,visibilidad) VALUES (?,?,?);";
    String comandoInsertado2 = "SELECT PlayID from playlist where nombrelista = ?";
    String comandoInsertado3 = "INSERT INTO songsplaylist(PlayID, file_names, file_locations) VALUES(?,?,?);";
    String comandoInsertado4 = "SELECT idusuario FROM playlist WHERE idusuario = ?";
    Boolean visible = jCheckBox1.isSelected();
    
    int playID = -1; // Para almacenar el PlayID de la nueva lista de reproducción
    
    try (PreparedStatement ps = conexion.prepareStatement(comandoInsertado)) {
        ps.setString(1, playName);
        ps.setInt(2, vUsuario.getID());
        ps.setBoolean(3, visible);
        
        int resultado = ps.executeUpdate();  
        if (resultado > 0) {
            JOptionPane.showMessageDialog(null, "La lista: " + playName + " se creó con éxito!");
        }
    }
    
    try (PreparedStatement ps2 = conexion.prepareStatement(comandoInsertado2)) {
        ps2.setString(1, playName);
        ResultSet rs = ps2.executeQuery();
        
        if (rs.next()) {
            playID = rs.getInt("PlayID");
        }
    }
    
    if (playID != -1) { // Si se encontró el PlayID de la nueva lista de reproducción
        for (File file : files) {
            try (PreparedStatement ps3 = conexion.prepareStatement(comandoInsertado3)) {
                ps3.setInt(1, playID);
                ps3.setString(2, file.getName());
                ps3.setString(3, file.getAbsolutePath());
                ps3.executeUpdate();
            }
        }
    }
    
    // Consulta para obtener el ID del usuario
    int userId = -1;
    try (PreparedStatement ps4 = conexion.prepareStatement(comandoInsertado4)) {
        ps4.setInt(1, vUsuario.getID());
        ResultSet rs = ps4.executeQuery();
        
        if (rs.next()) {
            userId = rs.getInt("idusuario");
        }
    }
    
    conexion.commit();
} catch (Exception e) {
    try {
        if (conexion != null) {
            conexion.rollback();
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
    }
    e.printStackTrace();
} finally {
    try {
        if (conexion != null) {
            conexion.close();
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
    }
    
}
    this.dispose();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnAgregarCancionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarCancionActionPerformed
        fileChooser = new JFileChooser();

    fileChooser.setMultiSelectionEnabled(true);
    fileChooser.setAcceptAllFileFilterUsed(false);
    fileChooser.setDialogTitle("Select a .mp3 or .wav file");

    FileNameExtensionFilter restrict = new FileNameExtensionFilter("Only .mp3 and .wav files", "mp3", ".wav");
    fileChooser.addChoosableFileFilter(restrict);

    int response = fileChooser.showOpenDialog(null);

    if (response == JFileChooser.APPROVE_OPTION) {
        files = fileChooser.getSelectedFiles();
        
        for (File file : files) {
            String fileName = file.getName();
            songList.add(fileName);
        }
        
        LstCanciones.setListData(songList.toArray(new String[0]));
    } else {
        System.out.println("Failed Opening File");
    }
    }//GEN-LAST:event_btnAgregarCancionActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
    this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrarListaR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrarListaR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrarListaR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrarListaR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrarListaR().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> LstCanciones;
    private javax.swing.JButton btnAgregarCancion;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
